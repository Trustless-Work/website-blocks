[
  {
    "id": "wallet-kit",
    "title": "Wallet Kit",
    "description": "Wallet provider, validators and a connect button powered by Stellar Wallets Kit.",
    "category": "Wallet",
    "escrowType": null,
    "tags": ["Wallet", "Stellar", "Provider", "Connect Button"],
    "notes": [
      "This block is required for all escrow blocks. It is used to provide the wallet provider, validators and a connect button powered by Stellar Wallets Kit. @Credit-Tech",
      "When you already added the block to your project, you should add the USDC trustline to your Wallet. Otherwise, the escrow interaction will not work.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method."
    ],
    "newBlocks": true,
    "install": "npx trustless-work add wallet-kit",
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/developer-resources/stellar-wallet-kit-quick-integration",
    "image": [
      "https://drive.google.com/file/d/1o31kZsuI4kPGVoCWcCymDOVJN93R5cL7/view?usp=sharing",
      "https://drive.google.com/file/d/1ya3ZHG0dCgnlBonElqaxqWifQ7k744cc/view?usp=sharing"
    ]
  },
  {
    "id": "escrows-escrows-by-role-table",
    "title": "Escrows Table by Role",
    "description": "Table layout to explore escrows by role with sorting and filtering. This component contains a detailed view of the escrow, including the role, status, and actions.",
    "category": "Table",
    "escrowType": "single-release,multi-release",
    "notes": [
      "The trustless work hook used in this block requires a specific role. In [escrows-by-role/table/EscrowsTable.tsx = const activeRole], the role is mocked with a filter for testing purposes. You should replace it with the role that best fits your use case.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method.",
      "In /details/Actions.tsx, you will find the <ReleaseEscrowButton />, <ResolveDisputeDialog />, and <DisputeEscrowButton /> components. They are currently commented out. If you are working with single-release escrows, uncomment them and import them from the single-release blocks.",
      "In /details/Actions.tsx, you will also find the <UpdateEscrowDialog /> component, which is commented out. For single-release escrows, uncomment it and import it from the single-release blocks. For multi-release escrows, import it from the multi-release blocks. If you need to support both types, import both versions, assign one of them a different name, and render the appropriate component based on selectedEscrow?.type.",
      "In /details/MilestoneCard.tsx, you will find the <ReleaseEscrowButton />, <DisputeEscrowButton />, and <ResolveDisputeDialog /> components. They are commented out. If you are working with multi-release escrows, uncomment them and import them from the multi-release blocks.",
      "The actions available in the details dialog depend on the role of the current user. In other words, the available actions vary based on the roles assigned during escrow initialization."
    ],
    "image": [
      "https://drive.google.com/file/d/1nKkclw42iCjgCaOQJskXRhfZ3io2Av0Z/view?usp=sharing",
      "https://drive.google.com/file/d/1p6617SvMI28h-vo4R6VPiCPDeK81GycB/view?usp=sharing"
    ],
    "tags": ["Escrows", "Table", "Role", "Filters", "Sorting", "Pagination"],
    "newBlocks": true,
    "install": "npx trustless-work add escrows/escrows-by-role/table",
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/usegetescrowsfromindexerbyrole",
    "requiredProviders": [
      "<ReactQueryClientProvider />",
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />",
      "<EscrowAmountProvider />",
      "<EscrowDialogsProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "helpers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-escrows-by-role-cards",
    "title": "Escrows Cards by Role",
    "description": "Card grid to browse escrows by role with quick stats and actions. This component contains a detailed view of the escrow, including the role, status, and actions.",
    "category": "Cards",
    "escrowType": "single-release,multi-release",
    "notes": [
      "The trustless work hook used in this block requires a specific role. In [escrows-by-role/cards/EscrowsCards.tsx = const activeRole], the role is mocked with a filter for testing purposes. You should replace it with the role that best fits your use case.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method.",
      "In /details/Actions.tsx, you will find the <ReleaseEscrowButton />, <ResolveDisputeDialog />, and <DisputeEscrowButton /> components. They are currently commented out. If you are working with single-release escrows, uncomment them and import them from the single-release blocks.",
      "In /details/Actions.tsx, you will also find the <UpdateEscrowDialog /> component, which is commented out. For single-release escrows, uncomment it and import it from the single-release blocks. For multi-release escrows, import it from the multi-release blocks. If you need to support both types, import both versions, assign one of them a different name, and render the appropriate component based on selectedEscrow?.type.",
      "In /details/MilestoneCard.tsx, you will find the <ReleaseEscrowButton />, <DisputeEscrowButton />, and <ResolveDisputeDialog /> components. They are commented out. If you are working with multi-release escrows, uncomment them and import them from the multi-release blocks.",
      "The actions available in the details dialog depend on the role of the current user. In other words, the available actions vary based on the roles assigned during escrow initialization."
    ],
    "image": [
      "https://drive.google.com/file/d/1ChSaD6RN1m90Xl3QAgSaGqFJ9GM9DdBy/view?usp=sharing",
      "https://drive.google.com/file/d/18FnIshZgdDJgkoQST6QU-C3f3nI8Jf_l/view?usp=sharing"
    ],
    "tags": ["Escrows", "Cards", "Role", "Grid", "Overview"],
    "newBlocks": true,
    "install": "npx trustless-work add escrows/escrows-by-role/cards",
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/usegetescrowsfromindexerbyrole",
    "requiredProviders": [
      "<ReactQueryClientProvider />",
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />",
      "<EscrowAmountProvider />",
      "<EscrowDialogsProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "helpers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-escrows-by-signer-table",
    "title": "Escrows Table by Signer",
    "description": "Table layout to explore escrows by signer with sorting and filtering. This component contains a detailed view of the escrow, including the signer, status, and actions.",
    "category": "Table",
    "escrowType": "single-release,multi-release",
    "image": [
      "https://drive.google.com/file/d/1CmZT405bkDQvKtSOPX7okDK8CWmdZMuX/view?usp=sharing",
      "https://drive.google.com/file/d/1OIbTiRBPTqvU-JvHA-K0sfnkglXKCx2S/view?usp=sharing"
    ],
    "tags": ["Escrows", "Table", "Signer", "Filters", "Sorting", "Pagination"],
    "newBlocks": true,
    "notes": [
      "To enable escrow button actions, you need to provide an array of roles assigned to the user. In [escrows-by-signer/table/EscrowsTable.tsx], the activeRole constant contains this array. Depending on the role, different actions will appear in the detail modal. Adjust the roles as needed to best fit your use case. The role is mocked for testing purposes.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method.",
      "In /details/Actions.tsx, you will find the <ReleaseEscrowButton />, <ResolveDisputeDialog />, and <DisputeEscrowButton /> components. They are currently commented out. If you are working with single-release escrows, uncomment them and import them from the single-release blocks.",
      "In /details/Actions.tsx, you will also find the <UpdateEscrowDialog /> component, which is commented out. For single-release escrows, uncomment it and import it from the single-release blocks. For multi-release escrows, import it from the multi-release blocks. If you need to support both types, import both versions, assign one of them a different name, and render the appropriate component based on selectedEscrow?.type.",
      "In /details/MilestoneCard.tsx, you will find the <ReleaseEscrowButton />, <DisputeEscrowButton />, and <ResolveDisputeDialog /> components. They are commented out. If you are working with multi-release escrows, uncomment them and import them from the multi-release blocks.",
      "The actions available in the details dialog depend on the role of the current user. In other words, the available actions vary based on the roles assigned during escrow initialization."
    ],
    "install": "npx trustless-work add escrows/escrows-by-signer/table",
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/usegetescrowsfromindexerbysigner",
    "requiredProviders": [
      "<ReactQueryClientProvider />",
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />",
      "<EscrowAmountProvider />",
      "<EscrowDialogsProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "helpers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-escrows-by-signer-cards",
    "title": "Escrows Cards by Signer",
    "description": "Card grid to browse escrows by signer with quick stats and actions. This component contains a detailed view of the escrow, including the signer, status, and actions.",
    "category": "Cards",
    "escrowType": "single-release,multi-release",
    "image": [
      "https://drive.google.com/file/d/14bClWE-NVN6H2b0gXAYFdwuOPPDucDc3/view?usp=sharing",
      "https://drive.google.com/file/d/1E66rkAULA7q4Zp70C9KqbklrqT4MUKUF/view?usp=sharing"
    ],
    "tags": ["Escrows", "Cards", "Signer", "Grid", "Overview"],
    "newBlocks": true,
    "notes": [
      "To enable escrow button actions, you need to provide an array of roles assigned to the user. In [escrows-by-signer/cards/EscrowsCards.tsx], the activeRole constant contains this array. Depending on the role, different actions will appear in the detail modal. Adjust the roles as needed to best fit your use case. The role is mocked for testing purposes.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method.",
      "In /details/Actions.tsx, you will find the <ReleaseEscrowButton />, <ResolveDisputeDialog />, and <DisputeEscrowButton /> components. They are currently commented out. If you are working with single-release escrows, uncomment them and import them from the single-release blocks.",
      "In /details/Actions.tsx, you will also find the <UpdateEscrowDialog /> component, which is commented out. For single-release escrows, uncomment it and import it from the single-release blocks. For multi-release escrows, import it from the multi-release blocks. If you need to support both types, import both versions, assign one of them a different name, and render the appropriate component based on selectedEscrow?.type.",
      "In /details/MilestoneCard.tsx, you will find the <ReleaseEscrowButton />, <DisputeEscrowButton />, and <ResolveDisputeDialog /> components. They are commented out. If you are working with multi-release escrows, uncomment them and import them from the multi-release blocks.",
      "The actions available in the details dialog depend on the role of the current user. In other words, the available actions vary based on the roles assigned during escrow initialization."
    ],
    "install": "npx trustless-work add escrows/escrows-by-signer/cards",
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/usegetescrowsfromindexerbysigner",
    "requiredProviders": [
      "<ReactQueryClientProvider />",
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />",
      "<EscrowAmountProvider />",
      "<EscrowDialogsProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "helpers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-initialize-escrow",
    "title": "Initialize Escrow",
    "description": "Component to initialize an escrow with different variants and types.",
    "category": "Escrows",
    "escrowType": "single-release,multi-release",
    "types": ["single-release", "multi-release"],
    "variants": ["form", "dialog"],
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/useinitializeescrow",
    "exampleUrl": "",
    "installByTypeAndVariant": {
      "single-release": {
        "form": "npx trustless-work add escrows/single-release/initialize-escrow/form",
        "dialog": "npx trustless-work add escrows/single-release/initialize-escrow/dialog"
      },
      "multi-release": {
        "form": "npx trustless-work add escrows/multi-release/initialize-escrow/form",
        "dialog": "npx trustless-work add escrows/multi-release/initialize-escrow/dialog"
      }
    },
    "notes": [
      "This form includes all the fields required by the initialize escrow payload (body requested for the tw endpoint, see documentation above) type, but it is intended for testing purposes only. You can adapt it to your needs—for example, if you always use the same platform address or only work with the USDC asset, you can simplify the form to request only the fields you actually need. Any fixed data can be set directly in the payload  before submitting the action",
      "There is a Template button in the form to fill out the form with the default values. It only will show in development mode based on the process.env.NODE_ENV."
    ],
    "image": [
      "https://drive.google.com/file/d/1Ve1z9M0I5OrOv3uxxVh4Cs9x2QQJMmQ0/view?usp=sharing",
      "https://drive.google.com/file/d/1nXxSc3BOQQlHNYOIORcEMq3JPFttT38L/view?usp=sharing"
    ],
    "tags": ["Initialize", "Escrows", "Onboarding"],
    "newBlocks": true,
    "requiredProviders": [
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-approve-milestone",
    "title": "Approve Milestone",
    "description": "Component to approve a milestone with form, button and dialog variants.",
    "category": "Escrows",
    "escrowType": "single-release,multi-release",
    "types": ["single-release", "multi-release"],
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/useapprovemilestone",
    "notes": [
      "You can modify the form as you prefer.",
      "The <ApproveMilestoneButton milestoneIndex={0} /> requests the milestone index. You can change it to the milestone index you want to approve based on the escrow you are working on.",
      "Make sure to select an escrow before extracting data with selectedEscrow from the escrowProvider context. If you don't call setSelectedEscrow, the endpoint will not work.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method. Keep in mind that while part of the payload may come from the form, some fields—such as contractId—will not be requested in the form. These values need to be retrieved from an escrow, which is why using a context is the recommended approach."
    ],
    "variants": ["form", "button", "dialog"],
    "installByVariant": {
      "form": "npx trustless-work add escrows/single-multi-release/approve-milestone/form",
      "button": "npx trustless-work add escrows/single-multi-release/approve-milestone/button",
      "dialog": "npx trustless-work add escrows/single-multi-release/approve-milestone/dialog"
    },
    "image": [
      "https://drive.google.com/file/d/1X4CEDgTKH76Tao7gMDKBmx0ouXFCfqEq/view?usp=sharing",
      "https://drive.google.com/file/d/1v1SYe35ugVW9vI8ilQnTePPqSiV2r7Mz/view?usp=sharing"
    ],
    "tags": ["Milestone", "Approve", "Escrows"],
    "newBlocks": true,
    "requiredProviders": [
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-change-milestone-status",
    "title": "Change Milestone Status",
    "description": "Component to change milestone status with form, button and dialog variants.",
    "category": "Escrows",
    "escrowType": "single-release,multi-release",
    "types": ["single-release", "multi-release"],
    "variants": ["form", "button", "dialog"],
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/usechangemilestonestatus",
    "notes": [
      "This form includes all the fields required by the change milestone status payload (body requested for the tw endpoint, see documentation above) type, but it is intended for testing purposes only. You can adapt it to your needs—for example, if you always will use the same status, you can simplify the form to request only the fields you actually need. Any fixed data can be set directly in the payload  before submitting the action",
      "The <ChangeMilestoneStatusButton milestoneIndex={0} status='COMPLETED' evidence='opcional evidence /> requests the milestone index, status and evidence (optional).",
      "Make sure to select an escrow before extracting data with selectedEscrow from the escrowProvider context. If you don't call setSelectedEscrow, the endpoint will not work.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method. Keep in mind that while part of the payload may come from the form, some fields—such as contractId—will not be requested in the form. These values need to be retrieved from an escrow, which is why using a context is the recommended approach."
    ],
    "installByVariant": {
      "form": "npx trustless-work add escrows/single-multi-release/change-milestone-status/form",
      "button": "npx trustless-work add escrows/single-multi-release/change-milestone-status/button",
      "dialog": "npx trustless-work add escrows/single-multi-release/change-milestone-status/dialog"
    },
    "image": [
      "https://drive.google.com/file/d/1EV-VaWpysHKxfCM47iJ7jUmg4T_aScRg/view?usp=sharing",
      "https://drive.google.com/file/d/1PuzOtYZn5XFz0dZnXetTlWTSZHawOqQS/view?usp=sharing"
    ],
    "tags": ["Milestone", "Status", "Escrows"],
    "newBlocks": true,
    "requiredProviders": [
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-fund-escrow",
    "title": "Fund Escrow",
    "description": "Component to fund an escrow using form, button and dialog variants.",
    "category": "Escrows",
    "escrowType": "single-release,multi-release",
    "types": ["single-release", "multi-release"],
    "variants": ["form", "button", "dialog"],
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/usefundescrow",
    "notes": [
      "This form includes all the fields required by the fund escrow payload (body requested for the tw endpoint, see documentation above) type, but it is intended for testing purposes only. You can adapt it to your needs—for example, if you always will use the same status, you can simplify the form to request only the fields you actually need. Any fixed data can be set directly in the payload  before submitting the action",
      "The <FundEscrowButton amount={100} /> requests the amount.",
      "Make sure to select an escrow before extracting data with selectedEscrow from the escrowProvider context. If you don't call setSelectedEscrow, the endpoint will not work.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method. Keep in mind that while part of the payload may come from the form, some fields—such as contractId—will not be requested in the form. These values need to be retrieved from an escrow, which is why using a context is the recommended approach."
    ],
    "installByVariant": {
      "form": "npx trustless-work add escrows/single-multi-release/fund-escrow/form",
      "button": "npx trustless-work add escrows/single-multi-release/fund-escrow/button",
      "dialog": "npx trustless-work add escrows/single-multi-release/fund-escrow/dialog"
    },
    "image": [
      "https://drive.google.com/file/d/1UeKPZgadgsyiUv6Fv-PEmUUhAEWKr74n/view?usp=sharing",
      "https://drive.google.com/file/d/14Ni0ViIkcYdPM8YdAcJM1B7EirKBGoF1/view?usp=sharing"
    ],
    "tags": ["Funding", "Escrows", "Assets"],
    "newBlocks": true,
    "requiredProviders": [
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-resolve-dispute",
    "title": "Resolve Dispute",
    "description": "Component to resolve disputes with form, button and dialog variants.",
    "category": "Escrows",
    "escrowType": "single-release,multi-release",
    "types": ["single-release", "multi-release"],
    "variants": ["form", "button", "dialog"],
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/useresolvedispute",
    "notes": [
      "This form includes all the fields required by the resolve dispute payload (body requested for the tw endpoint, see documentation above) type, but it is intended for testing purposes only. You can adapt it to your needs—for example, if you always will use the same approverAmount, you can simplify the form to request only the fields you actually need. Any fixed data can be set directly in the payload  before submitting the action",
      "The <ResolveDisputeButton approverFunds={100} receiverFunds={100} /> requests the approverFunds and receiverFunds.",
      "Make sure to select an escrow before extracting data with selectedEscrow from the escrowProvider context. If you don't call setSelectedEscrow, the endpoint will not work.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method. Keep in mind that while part of the payload may come from the form, some fields—such as contractId—will not be requested in the form. These values need to be retrieved from an escrow, which is why using a context is the recommended approach."
    ],
    "installByTypeAndVariant": {
      "single-release": {
        "form": "npx trustless-work add escrows/single-release/resolve-dispute/form",
        "button": "npx trustless-work add escrows/single-release/resolve-dispute/button",
        "dialog": "npx trustless-work add escrows/single-release/resolve-dispute/dialog"
      },
      "multi-release": {
        "form": "npx trustless-work add escrows/multi-release/resolve-dispute/form",
        "button": "npx trustless-work add escrows/multi-release/resolve-dispute/button",
        "dialog": "npx trustless-work add escrows/multi-release/resolve-dispute/dialog"
      }
    },
    "image": [
      "https://drive.google.com/file/d/1ZBDwPNn62ui657Nh0GyIlNj0hKCUjzti/view?usp=sharing",
      "https://drive.google.com/file/d/1vxACZvEaBO_I8KNqAlkZWbAH1XV78rxB/view?usp=sharing"
    ],
    "tags": ["Dispute", "Resolve", "Escrows"],
    "newBlocks": true,
    "requiredProviders": [
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-update-escrow",
    "title": "Update Escrow",
    "description": "Component to update escrow configuration with form and dialog variants.",
    "category": "Escrows",
    "escrowType": "single-release,multi-release",
    "types": ["single-release", "multi-release"],
    "variants": ["form", "dialog"],
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/useupdateescrow",
    "notes": [
      "This form includes all the fields required by the update escrow payload (body requested for the tw endpoint, see documentation above) type, but it is intended for testing purposes only. You can adapt it to your needs—for example, if you always use the same platform address or only work with the USDC asset, you can simplify the form to request only the fields you actually need. Any fixed data can be set directly in the payload  before submitting the action",
      "Make sure to select an escrow before extracting data with selectedEscrow from the escrowProvider context. If you don't call setSelectedEscrow, the endpoint will not work.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method. Keep in mind that while part of the payload may come from the form, some fields—such as contractId—will not be requested in the form. These values need to be retrieved from an escrow, which is why using a context is the recommended approach."
    ],
    "installByTypeAndVariant": {
      "single-release": {
        "form": "npx trustless-work add escrows/single-release/update-escrow/form",
        "dialog": "npx trustless-work add escrows/single-release/update-escrow/dialog"
      },
      "multi-release": {
        "form": "npx trustless-work add escrows/multi-release/update-escrow/form",
        "dialog": "npx trustless-work add escrows/multi-release/update-escrow/dialog"
      }
    },
    "image": [
      "https://drive.google.com/file/d/1jnrF3My4tK5fMcojvuS0t4didc3-RX75/view?usp=sharing",
      "https://drive.google.com/file/d/1d5lrFdIX30weJLlNFudVrA5eFMho9TKS/view?usp=sharing"
    ],
    "tags": ["Update", "Escrows", "Admin"],
    "newBlocks": true,
    "requiredProviders": [
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-release-escrow",
    "title": "Release",
    "description": "Action to release escrow funds.",
    "category": "Escrows",
    "escrowType": "single-release,multi-release",
    "types": ["single-release", "multi-release"],
    "variants": ["button"],
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/usereleasefunds",
    "notes": [
      "The <ReleaseEscrowButton /> does not require any parameters.",
      "Make sure to select an escrow before extracting data with selectedEscrow from the escrowProvider context. If you don't call setSelectedEscrow, the endpoint will not work.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method. Keep in mind that while part of the payload may come from the form, some fields—such as contractId—will not be requested in the form. These values need to be retrieved from an escrow, which is why using a context is the recommended approach."
    ],
    "installByTypeAndVariant": {
      "single-release": {
        "button": "npx trustless-work add escrows/single-release/release-escrow/button"
      },
      "multi-release": {
        "button": "npx trustless-work add escrows/multi-release/release-milestone/button"
      }
    },
    "image": [
      "https://drive.google.com/file/d/1JAACX8z9FEc1YEWE5Kla9_H08oPhJCmB/view?usp=sharing",
      "https://drive.google.com/file/d/1kegWlnTAaMFDBh5JcCQWxl3CK38QSYcl/view?usp=sharing"
    ],
    "tags": ["Release", "Escrows", "Payout"],
    "newBlocks": true,
    "requiredProviders": [
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  },
  {
    "id": "escrows-dispute-escrow",
    "title": "Dispute",
    "description": "Action to raise a dispute in the escrow or milestone.",
    "category": "Escrows",
    "escrowType": "single-release,multi-release",
    "types": ["single-release", "multi-release"],
    "variants": ["button"],
    "docTypeUrl": "https://docs.trustlesswork.com/trustless-work/react-library-hooks/usestartdispute",
    "notes": [
      "The <DisputeEscrowButton /> does not require any parameters.",
      "Make sure to select an escrow before extracting data with selectedEscrow from the escrowProvider context. If you don't call setSelectedEscrow, the endpoint will not work.",
      "If you don't want to use the escrowProvider context, you'll need to provide the payload through an alternative method. Keep in mind that while part of the payload may come from the form, some fields—such as contractId—will not be requested in the form. These values need to be retrieved from an escrow, which is why using a context is the recommended approach."
    ],
    "installByTypeAndVariant": {
      "single-release": {
        "button": "npx trustless-work add escrows/single-release/dispute-escrow/button"
      },
      "multi-release": {
        "button": "npx trustless-work add escrows/multi-release/dispute-milestone/button"
      }
    },
    "image": [
      "https://drive.google.com/file/d/1MqqMwUry91GKc9n_yi3TslV6Ld-ZbJCI/view?usp=sharing",
      "https://drive.google.com/file/d/196CvqVSEMSZlwKO1d_lPDtQL5vAwY6j3/view?usp=sharing"
    ],
    "tags": ["Dispute", "Escrows", "Actions"],
    "newBlocks": true,
    "requiredProviders": [
      "<TrustlessWorkProvider />",
      "<WalletProvider />",
      "<EscrowProvider />"
    ],
    "requiredBlocks": [
      {
        "name": "wallet-kit",
        "url": "/get-started/dependencies"
      },
      {
        "name": "providers",
        "url": "/get-started/dependencies"
      },
      {
        "name": "handle-errors",
        "url": "/get-started/dependencies"
      },
      {
        "name": "tanstack",
        "url": "/get-started/dependencies"
      },
      {
        "name": "single-release",
        "url": "/get-started/dependenciese"
      },
      {
        "name": "multi-release",
        "url": "/get-started/dependencies"
      }
    ]
  }
]
